- hosts: HYP2
  gather_facts: no
#  remote_user: root
  become: yes

  tasks:
#    - name: Getting interface details
#      debug:
#        msg: "{{ hostvars[inventory_hostname]['ansible_%s' | format(item)] }}"
#      with_items: "{{ ansible_interfaces }}"


#      debug: msg=ansible_{{ item }}
#      with_items: "{{ ansible_default_ipv4[macaddress] }}"

#    - name: Getting MAC of VM
#      shell: virsh dumpxml {{ domain_name }} | grep "mac address" | grep -oE "([0-9a-f][0-9a-f]:){5}[0-9a-f][0-9a-f]"
#      register: mac_addr


    - name: Checking the presence of VM
      stat:
        path: /etc/libvirt/qemu/{{ domain_name }}.xml
      register: st

    - debug:
        msg: "VM Does not Exist! Kindly specify the correct VM"
      when: st.stat.exists == False

    - name: Checking state of VM
      virt:
        name: "{{ domain_name }}"
        command: status
        uri: 'qemu:///system'
      register: vmstatus
      when: st.stat.exists == True

    - name: Shutting down the VM
      virt:
        name: "{{ domain_name }}"
        command: destroy
        uri: 'qemu:///system'
      when: vmstatus.status == 'running'

    - name: Deleting the VM
      shell: virsh undefine {{ domain_name }} --remove-all-storage

    - name: Removing connection to bridge
      shell: ip link delete veth_{{ domain_name }}_a

    - name: Getting PWD in remote host
      shell: pwd
      register: dir

    - name: Updating the Flows
      replace:
        destfile: "{{ dir.stdout }}/HypeTunnel/flows.txt"
        regexp: '^table=1,tun_id={{ TID }},(.*={{ mac_addr }}|arp,.*={{ vm_ip }}).*$'
        replace: ''
        backup: yes

    - name: Deleting current flows in OVS
      shell: ovs-ofctl del-flows central_ovs

    - name: Pushing new updated flows to OVS
      shell: ovs-ofctl add-flows central_ovs {{ dir.stdout }}/HypeTunnel/flows.txt


################ LOGGING TASKS ###################

    - name: Get Current Time
      shell: date
      register: cur_timestamp


- hosts: localhost
  tasks:
    - name: Getting PWD in central host
      shell: pwd
      register: curDir

    - name: Updating the Database
      lineinfile:
        destfile: "{{ curDir.stdout }}/HypeTunnel/conf/database.txt"
        state: absent
        regexp: '^HYP_IP:192.168.124.151.*Tenant:{{ TID }}.*VM_IP:{{ vm_ip }}$'

    - name: Writing to log file
      copy:
        content: "{{ cur_timestamp.stdout }}: Deleted VM {{ domain_name }} of Tenant {{ TID }} on "
        dest: "{{ curDir.stdout }}/HypeTunnel/conf/logs.txt"

